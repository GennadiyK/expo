{"version":3,"file":"VideoView.web.js","sourceRoot":"","sources":["../src/VideoView.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\n\nimport { VideoPlayer } from './VideoPlayer';\nimport { VideoViewProps } from './VideoView.types';\nclass VideoPlayerImpl implements VideoPlayer {\n  src: string | null = null;\n  mountedVideos: Set<HTMLVideoElement> = new Set();\n  isPlaying: boolean = false;\n  _isMuted: boolean = false;\n  set isMuted(value: boolean) {\n    this.mountedVideos.forEach((video) => {\n      video.muted = value;\n    });\n    this._isMuted = value;\n  }\n  get isMuted(): boolean {\n    return this._isMuted;\n  }\n  timestamp: number = 0;\n  play(): void {\n    this.mountedVideos.forEach((video) => {\n      video.play();\n    });\n    this.isPlaying = true;\n  }\n  pause(): void {\n    this.mountedVideos.forEach((video) => {\n      video.pause();\n    });\n    this.isPlaying = false;\n  }\n  replace(source: string): void {\n    this.mountedVideos.forEach((video) => {\n      video.pause();\n      video.setAttribute('src', source);\n      video.load();\n      video.play();\n    });\n    this.isPlaying = true;\n  }\n  seekBy(seconds: number): void {\n    this.mountedVideos.forEach((video) => {\n      video.currentTime += seconds;\n    });\n  }\n  replay(): void {\n    this.mountedVideos.forEach((video) => {\n      video.currentTime = 0;\n      video.play();\n    });\n    this.isPlaying = true;\n  }\n  constructor(source: string | null = null) {\n    this.src = source;\n  }\n}\n\nexport function useVideoPlayer(source: string | null = null): VideoPlayer {\n  return React.useMemo(() => {\n    return new VideoPlayerImpl(source);\n    // should this not include source?\n  }, []);\n}\n\nexport const VideoView = forwardRef((props: { player?: VideoPlayerImpl } & VideoViewProps, ref) => {\n  const videoRef = useRef<null | HTMLVideoElement>(null);\n  useImperativeHandle(ref, () => ({\n    enterFullscreen: () => {\n      if (!props.allowsFullscreen) {\n        return;\n      }\n      videoRef.current?.requestFullscreen();\n    },\n    exitFullscreen: () => {\n      document.exitFullscreen();\n    },\n  }));\n\n  useEffect(() => {\n    if (!props.player || !videoRef.current) return;\n    props.player.mountedVideos.add(videoRef.current);\n    return () => {\n      if (videoRef.current) {\n        props.player?.mountedVideos.delete(videoRef.current);\n      }\n    };\n  }, [props.player]);\n  return (\n    <video\n      {...props}\n      controls={props.nativeControls}\n      controlsList={props.allowsFullscreen ? undefined : 'nofullscreen'}\n      ref={videoRef}\n      src={props.player?.src ?? ''}\n    />\n  );\n});\n\nexport default VideoView;\n"]}